{"version":3,"sources":["subdocument_test.js"],"names":["before","t","after","always","beforeEach","connection","collections","users","drop","serial","joe","name","posts","title","save","findOne","queriedUser","is","pass"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAKA,cAAKA,MAAL,CAAY,qBAAZ;AAAA,uDAAmC,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC3B,kCAAgB,YAAhB,CAD2B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnC;;AAAA;AAAA;AAAA;AAAA;;AAIA,cAAKC,KAAL,CAAWC,MAAX,CAAkB,0BAAlB,4CAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACtC,sCADsC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9C;;AAIA,cAAKC,UAAL,CAAgB,kBAAhB;AAAA,wDAAoC,kBAAOH,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAE1B,mBAASI,UAAT,CAAoBC,WAApB,CAAgCC,KAAhC,CAAsCC,IAAtC,EAF0B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApC;;AAAA;AAAA;AAAA;AAAA;AAKI;AALJ;;AASA,cAAKC,MAAL,CAAY,cAAZ;AAAA,wDAA4B,kBAAOR,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1B;AACMS,eAFoB,GAEd,mBAAS;AACnBC,oBAAM,KADa;AAEnBC,qBAAO,CAAC,EAAEC,OAAO,YAAT,EAAD;AAFY,aAAT,CAFc;AAAA;AAAA,mBAMpBH,IAAII,IAAJ,EANoB;;AAAA;AAAA;AAAA,mBAOA,eAAKC,OAAL,CAAa,EAAEJ,MAAM,KAAR,EAAb,CAPA;;AAAA;AAOpBK,uBAPoB;;AAQ1Bf,cAAEgB,EAAF,CAAMD,YAAYJ,KAAZ,CAAkB,CAAlB,EAAqBC,KAA3B,EAAkC,aAAlC,EAAiD,mDAAjD;AACAZ,cAAEiB,IAAF;;AAT0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA","file":"subdocument_test.js","sourcesContent":["import test from 'ava';\nimport mongoose from 'mongoose';\nimport User from '../../src/user';\nimport {\n  mongooseConnect,\n  mongooseDisconnect,\n} from '../test_helper';\n\ntest.before('connect to database', async (t) => {\n  await mongooseConnect('users_test');\n});\n\ntest.after.always('disconnect from database', async () => {\n  await mongooseDisconnect();\n});\n\ntest.beforeEach('drop users table', async (t) => {\n  try {\n    await mongoose.connection.collections.users.drop();\n  }\n  catch (err) {\n    // IGNORE EXCEPTION\n  }\n});\n\ntest.serial('Subdocuments', async (t) => {\n  // 'can create a subdocumenet'\n  const joe = new User({\n    name: 'Joe',\n    posts: [{ title: 'post_title' }],\n  });\n  await joe.save();\n  const queriedUser = await User.findOne({ name: 'Joe' });\n  t.is( queriedUser.posts[0].title, 'post_title2', 'queriedUser has a post with appropriate postTitle' );\n  t.pass();\n})"]}