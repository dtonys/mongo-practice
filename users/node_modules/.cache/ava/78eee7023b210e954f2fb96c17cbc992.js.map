{"version":3,"sources":["create_test.js"],"names":["assert","connection","collections","users","drop","comment","user_1","name","save","true","isNew","end"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,yBAAK,kBAAL,EAAyB,MAAOA,MAAP,IAAkB;AACzC,QAAM,mBAASC,UAAT,CAAoBC,WAApB,CAAgCC,KAAhC,CAAsCC,IAAtC,EAAN;;AAEAJ,SAAOK,OAAP,CAAe,iBAAf;AACA,QAAMC,SAAS,mBAAS;AACtBC,UAAM;AADgB,GAAT,CAAf;AAGA,QAAMD,OAAOE,IAAP,EAAN;AACAR,SAAOS,IAAP,CAAa,CAACH,OAAOI,KAArB,EAA4B,4CAA5B;AACAV,SAAOW,GAAP;AACD,CAVD;;AAYA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"create_test.js","sourcesContent":["import test from 'tape-async';\nimport mongoose from 'mongoose';\nimport User from '../src/user';\n\ntest('Creating records', async (assert) => {\n  await mongoose.connection.collections.users.drop();\n\n  assert.comment('save a new user');\n  const user_1 = new User({\n    name: 'user_1',\n  });\n  await user_1.save();\n  assert.true( !user_1.isNew, 'user\\'s `isNew` flag is false after a save' );\n  assert.end();\n});\n\n//\n\n// test('simple test', (assert) => {\n//   assert.plan(5);\n//   assert.equal( true, true, 'true equals true' );\n//   assert.true( true, 'true is truthy' );\n//   assert.false( false, 'false is falsy' );\n\n//   setTimeout(() => {\n//     assert.true( true, 'true is truthy' );\n//   }, 2000);\n// });\n"]}