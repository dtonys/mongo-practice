{"version":3,"sources":["read_test.js"],"names":["assert","connection","collections","users","drop","joe","name","save","comment","find","equal","_id","toString","user","findOne","equals","end"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAGA,yBAAK,mCAAL,EAA0C,MAAOA,MAAP,IAAkB;;AAE1D,QAAM,mBAASC,UAAT,CAAoBC,WAApB,CAAgCC,KAAhC,CAAsCC,IAAtC,EAAN;AACA,QAAMC,MAAM,mBAAS,EAAEC,MAAM,KAAR,EAAT,CAAZ;AACA,QAAMD,IAAIE,IAAJ,EAAN;;AAEAP,SAAOQ,OAAP,CAAe,kCAAf;AACA,QAAML,QAAQ,MAAM,eAAKM,IAAL,CAAU,EAAEH,MAAM,KAAR,EAAV,CAApB;;AAEAN,SAAOU,KAAP,CACEP,MAAM,CAAN,EAASQ,GAAT,CAAaC,QAAb,EADF,EAEEP,IAAIM,GAAJ,CAAQC,QAAR,EAFF,EAGE,yDAHF;;AAMAZ,SAAOQ,OAAP,CAAe,mCAAf;AACA,QAAMK,OAAO,MAAM,eAAKC,OAAL,CAAa,EAAEH,KAAKN,IAAIM,GAAX,EAAb,CAAnB;AACAX,SAAOe,MAAP,CAAcF,KAAKP,IAAnB,EAAyB,KAAzB,EAAgC,mCAAhC;;AAEAN,SAAOgB,GAAP;AACD,CApBD","file":"read_test.js","sourcesContent":["import test from 'tape-async';\nimport mongoose from 'mongoose';\nimport User from '../src/user';\n\n\ntest('Reading users out of the database', async (assert) => {\n\n  await mongoose.connection.collections.users.drop();\n  const joe = new User({ name: 'Joe' });\n  await joe.save();\n\n  assert.comment('query user by name, using `find`');\n  const users = await User.find({ name: 'Joe' });\n\n  assert.equal(\n    users[0]._id.toString(),\n    joe._id.toString(),\n    'the id of the created object is same as the one queried'\n  );\n\n  assert.comment('query user by id, using `findOne`');\n  const user = await User.findOne({ _id: joe._id });\n  assert.equals(user.name, 'Joe', 'Joe user should have the name Joe');\n\n  assert.end();\n});"]}