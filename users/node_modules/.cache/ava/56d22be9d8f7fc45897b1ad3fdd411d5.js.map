{"version":3,"sources":["association_test.js"],"names":["before","t","after","always","beforeEach","joe","name","blogPost","title","content","comment","blogPosts","push","comments","user","Promise","all","save","serial","pass"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAMA,cAAKA,MAAL,CAAY,qBAAZ;AAAA,uDAAmC,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC3B,kCAAgB,YAAhB,CAD2B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnC;;AAAA;AAAA;AAAA;AAAA;;AAIA,cAAKC,KAAL,CAAWC,MAAX,CAAkB,0BAAlB,4CAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACtC,sCADsC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9C;;AAIA,cAAKC,UAAL,CAAgB,qBAAhB,4CAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/BC,aAD+B,GACzB,mBAAS;AACnBC,kBAAM;AADa,WAAT,CADyB;AAI/BC,kBAJ+B,GAIpB,uBAAa;AAC5BC,mBAAO,qBADqB;AAE5BC,qBAAS;AAFmB,WAAb,CAJoB;AAQ/BC,iBAR+B,GAQrB,sBAAY;AAC1BD,qBAAS;AADiB,WAAZ,CARqB;;;AAYrCJ,cAAIM,SAAJ,CAAcC,IAAd,CAAmBL,QAAnB;AACAA,mBAASM,QAAT,CAAkBD,IAAlB,CAAuBF,OAAvB;AACAA,kBAAQI,IAAR,GAAeT,GAAf;;AAdqC;AAAA,iBAgB/BU,QAAQC,GAAR,CAAY,CAChBX,IAAIY,IAAJ,EADgB,EAEhBV,SAASU,IAAT,EAFgB,EAGhBP,QAAQO,IAAR,EAHgB,CAAZ,CAhB+B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvC;;AAwBA,cAAKC,MAAL,CAAY,cAAZ;AAAA,wDAA4B,kBAAOjB,CAAP;AAAA;AAAA;AAAA;AAAA;AAC1BA,cAAEkB,IAAF;;AAD0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA","file":"association_test.js","sourcesContent":["import test from 'ava';\nimport mongoose from 'mongoose';\nimport User from '../../src/user';\nimport Comment from '../../src/comment';\nimport BlogPost from '../../src/blogPost';\nimport {\n  mongooseConnect,\n  mongooseDisconnect,\n} from '../test_helper';\n\n\ntest.before('connect to database', async (t) => {\n  await mongooseConnect('users_test');\n});\n\ntest.after.always('disconnect from database', async () => {\n  await mongooseDisconnect();\n});\n\ntest.beforeEach('create associations', async () => {\n  const joe = new User({\n    name: 'Joe',\n  });\n  const blogPost = new BlogPost({\n    title: 'test blogPost title',\n    content: 'test blogPost content',\n  });\n  const comment = new Comment({\n    content: 'test Comment content',\n  });\n\n  joe.blogPosts.push(blogPost);\n  blogPost.comments.push(comment);\n  comment.user = joe;\n\n  await Promise.all([\n    joe.save(),\n    blogPost.save(),\n    comment.save(),\n  ]);\n\n});\n\ntest.serial('Associations', async (t) => {\n  t.pass();\n});\n"]}