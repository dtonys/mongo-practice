{"version":3,"sources":["read_test.js"],"names":["before","t","after","always","beforeEach","connection","collections","users","drop","serial","joe","name","save","find","is","_id","toString","findOne","user"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAMA,cAAKA,MAAL,CAAY,qBAAZ;AAAA,uDAAmC,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC3B,kCAAgB,YAAhB,CAD2B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnC;;AAAA;AAAA;AAAA;AAAA;;AAIA,cAAKC,KAAL,CAAWC,MAAX,CAAkB,0BAAlB,4CAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACtC,sCADsC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9C;;AAIA,cAAKC,UAAL,CAAgB,kBAAhB;AAAA,wDAAoC,kBAAOH,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC5B,mBAASI,UAAT,CAAoBC,WAApB,CAAgCC,KAAhC,CAAsCC,IAAtC,EAD4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApC;;AAAA;AAAA;AAAA;AAAA;;AAIA,cAAKC,MAAL,CAAY,uBAAZ;AAAA,wDAAqC,kBAAOR,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7BS,eAD6B,GACvB,mBAAS,EAAEC,MAAM,KAAR,EAAT,CADuB;AAAA;AAAA,mBAE7BD,IAAIE,IAAJ,EAF6B;;AAAA;AAAA;AAAA,mBAIf,eAAKC,IAAL,CAAU,EAAEF,MAAM,KAAR,EAAV,CAJe;;AAAA;AAI7BJ,iBAJ6B;;;AAMnCN,cAAEa,EAAF,CACEP,MAAM,CAAN,EAASQ,GAAT,CAAaC,QAAb,EADF,EAEEN,IAAIK,GAAJ,CAAQC,QAAR,EAFF,EAGE,yDAHF;;AANmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAAA;AAAA;AAAA;AAAA;;AAcA,cAAKP,MAAL,CAAY,0BAAZ;AAAA,wDAAwC,kBAAOR,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAChCS,eADgC,GAC1B,mBAAS,EAAEC,MAAM,KAAR,EAAT,CAD0B;AAAA;AAAA,mBAEhCD,IAAIE,IAAJ,EAFgC;;AAAA;AAAA;AAAA,mBAGnB,eAAKK,OAAL,CAAa,EAAEF,KAAKL,IAAIK,GAAX,EAAb,CAHmB;;AAAA;AAGhCG,gBAHgC;;AAItCjB,cAAEa,EAAF,CAAMI,KAAKP,IAAX,EAAiB,KAAjB,EAAwB,mCAAxB;;AAJsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxC;;AAAA;AAAA;AAAA;AAAA","file":"read_test.js","sourcesContent":["import test from 'ava';\nimport mongoose from 'mongoose';\nimport User from '../../src/user';\nimport {\n  mongooseConnect,\n  mongooseDisconnect,\n} from '../test_helper';\n\n\ntest.before('connect to database', async (t) => {\n  await mongooseConnect('users_test');\n});\n\ntest.after.always('disconnect from database', async () => {\n  await mongooseDisconnect();\n});\n\ntest.beforeEach('drop users table', async (t) => {\n  await mongoose.connection.collections.users.drop();\n});\n\ntest.serial('query user via `find`', async (t) => {\n  const joe = new User({ name: 'Joe' });\n  await joe.save();\n\n  const users = await User.find({ name: 'Joe' });\n\n  t.is(\n    users[0]._id.toString(),\n    joe._id.toString(),\n    'the id of the created object is same as the one queried'\n  );\n\n});\n\ntest.serial('query user via `findOne`', async (t) => {\n  const joe = new User({ name: 'Joe' });\n  await joe.save();\n  const user = await User.findOne({ _id: joe._id });\n  t.is( user.name, 'Joe', 'Joe user should have the name Joe' )\n});\n\n"]}