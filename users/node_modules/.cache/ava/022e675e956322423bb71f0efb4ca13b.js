'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createMongoose = undefined;

var createMongoose = exports.createMongoose = function () {
  var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee() {
    var db, connectionString, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, name;

    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            db = new _mongoose2.default.Mongoose();
            _context.next = 3;
            return _mongomem.MongoDBServer.getConnectionString();

          case 3:
            connectionString = _context.sent;
            _context.next = 6;
            return db.connect(connectionString, {
              useMongoClient: true
            });

          case 6:
            _iteratorNormalCompletion = true;
            _didIteratorError = false;
            _iteratorError = undefined;
            _context.prev = 9;

            for (_iterator = _mongoose2.default.modelNames()[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              name = _step.value;

              db.model(name, _mongoose2.default.model(name).schema);
            }
            _context.next = 17;
            break;

          case 13:
            _context.prev = 13;
            _context.t0 = _context['catch'](9);
            _didIteratorError = true;
            _iteratorError = _context.t0;

          case 17:
            _context.prev = 17;
            _context.prev = 18;

            if (!_iteratorNormalCompletion && _iterator.return) {
              _iterator.return();
            }

          case 20:
            _context.prev = 20;

            if (!_didIteratorError) {
              _context.next = 23;
              break;
            }

            throw _iteratorError;

          case 23:
            return _context.finish(20);

          case 24:
            return _context.finish(17);

          case 25:
            return _context.abrupt('return', db);

          case 26:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this, [[9, 13, 17, 25], [18,, 20, 24]]);
  }));

  return function createMongoose() {
    return _ref.apply(this, arguments);
  };
}();

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _mongoose = require('mongoose');

var _mongoose2 = _interopRequireDefault(_mongoose);

var _mongomem = require('mongomem');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

_mongoose2.default.Promise = global.Promise;
//# sourceMappingURL=../node_modules/.cache/ava/022e675e956322423bb71f0efb4ca13b.js.map