{"version":3,"sources":["virtual_type_test.js"],"names":["before","t","after","always","serial","joe","name","posts","title","save","findOne","queriedUser","is","postCount"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAMA,cAAKA,MAAL,CAAY,qBAAZ;AAAA,uDAAmC,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC3B,kCAAgB,YAAhB,CAD2B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnC;;AAAA;AAAA;AAAA;AAAA;;AAIA,cAAKC,KAAL,CAAWC,MAAX,CAAkB,0BAAlB,4CAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACtC,sCADsC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9C;;AAIA,cAAKC,MAAL,CAAY,mCAAZ;AAAA,wDAAiD,kBAAOH,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACzCI,eADyC,GACnC,mBAAS;AACnBC,oBAAM,KADa;AAEnBC,qBAAO,CAAC,EAAEC,OAAO,WAAT,EAAD;AAFY,aAAT,CADmC;AAAA;AAAA,mBAKzCH,IAAII,IAAJ,EALyC;;AAAA;AAAA;AAAA,mBAMrB,eAAKC,OAAL,CAAa,EAAEJ,MAAM,KAAR,EAAb,CANqB;;AAAA;AAMzCK,uBANyC;;AAO/CV,cAAEW,EAAF,CAAKD,YAAYE,SAAjB,EAA4B,CAA5B,EAA+B,uDAA/B;;AAP+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjD;;AAAA;AAAA;AAAA;AAAA","file":"virtual_type_test.js","sourcesContent":["import test from 'ava';\nimport mongoose from 'mongoose';\nimport User from '../../src/user';\nimport {\n  mongooseConnect,\n  mongooseDisconnect,\n} from '../test_helper';\n\n\ntest.before('connect to database', async (t) => {\n  await mongooseConnect('users_test');\n});\n\ntest.after.always('disconnect from database', async () => {\n  await mongooseDisconnect();\n});\n\ntest.serial('postCount returns number of posts', async (t) => {\n  const joe = new User({\n    name: 'joe',\n    posts: [{ title: 'PostTitle' }],\n  });\n  await joe.save();\n  const queriedUser = await User.findOne({ name: 'joe' });\n  t.is(queriedUser.postCount, 1, 'user postCount virtual should compute number of posts');\n});\n"]}