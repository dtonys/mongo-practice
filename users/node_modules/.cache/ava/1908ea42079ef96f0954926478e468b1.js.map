{"version":3,"sources":["read_test.js"],"names":["before","t","start","beforeEach","db","context","User","models","pass"],"mappings":";;AAAA;;;;AACA;;AAEA;;;;;;AAIA,cAAKA,MAAL,CAAY,cAAZ;AAAA,uDAA4B,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACpB,wBAAcC,KAAd,EADoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;;AAIA,cAAKC,UAAL,CAAgB,4BAAhB;AAAA,wDAA8C,kBAAOF,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC3B,kCAD2B;;AAAA;AACtCG,cADsC;;AAE5CH,cAAEI,OAAF,CAAUD,EAAV,GAAeA,EAAf;;AAF4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9C;;AAAA;AAAA;AAAA;AAAA;;AAKA,mBAAK,qCAAL;AAAA,wDAA4C,kBAAOH,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAClCG,cADkC,GAC3BH,EAAEI,OADyB,CAClCD,EADkC;AAEpCE,gBAFoC,GAE7BF,GAAGG,MAAH,CAAU,MAAV,CAF6B;;AAI1C;AACA;;AAEA;;AAEAN,cAAEO,IAAF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAvB0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5C;;AAAA;AAAA;AAAA;AAAA","file":"read_test.js","sourcesContent":["import test from 'ava';\nimport { MongoDBServer } from 'mongomem';\n\nimport {\n  createMongoose\n} from '../test_helper';\n\ntest.before('start server', async t => {\n  await MongoDBServer.start();\n})\n\ntest.beforeEach('create mongoose connection', async (t) => {\n  const db = await createMongoose();\n  t.context.db = db;\n});\n\ntest('query user via `find` and `findOne`', async (t) => {\n  const { db } = t.context;\n  const User = db.models['user'];\n\n  // console.log('db.connection.collections');\n  // console.log(db.connection.collections);\n\n  // await db.connection.collections.users.drop();\n\n  t.pass();\n\n  // const NEW_USER_NAME = 'Joe';\n  // const joe = new User({ name: NEW_USER_NAME });\n  // await joe.save();\n  // const users = await User.find({ name: NEW_USER_NAME });\n\n  // t.is(\n  //   users[0]._id.toString(),\n  //   joe._id.toString(),\n  //   'the id of the created object is same as the queried one'\n  // );\n\n  // const user = await User.findOne({ _id: joe._id });\n  // t.is(user.name, NEW_USER_NAME, 'the name of the created object is same as the queried one');\n\n});\n\n"]}