{"version":3,"sources":["create_test.js"],"names":["before","t","start","beforeEach","db","context","user_1","name","save","true","isNew"],"mappings":";;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AAEA;;;;AAIA,cAAKA,MAAL,CAAY,cAAZ,EAA4B,MAAMC,CAAN,IAAW;AACrC,QAAM,wBAAcC,KAAd,EAAN;AACD,CAFD;;AAIA,cAAKC,UAAL,CAAiB,MAAOF,CAAP,IAAa;AAC5B,QAAMG,KAAK,kCAAX;AACAH,IAAEI,OAAF,CAAUD,EAAV,GAAeA,EAAf;AACD,CAHD;;AAKA,mBAAK,mBAAL,EAA0B,MAAOH,CAAP,IAAa;AAAA;;AACrC,QAAM,EAAEG,EAAF,KAASH,EAAEI,OAAjB;AACA,QAAMC,SAAS,mBAAS;AACtBC,UAAM;AADgB,GAAT,CAAf;AAGA,QAAMD,OAAOE,IAAP,EAAN;AACAP,IAAEQ,IAAF,uBAAQ,YAAC,kDAAOC,KAAR,yBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAuB,4CAAvB;AACD,CAPD","file":"create_test.js","sourcesContent":["import test from 'ava';\nimport mongoose from 'mongoose';\nimport { MongoDBServer } from 'mongomem';\nimport User from '../src/user';\n\nimport {\n  createMongoose\n} from './test_helper';\n\ntest.before('start server', async t => {\n  await MongoDBServer.start();\n})\n\ntest.beforeEach( async (t) => {\n  const db = createMongoose();\n  t.context.db = db;\n});\n\ntest('Creating records ', async (t) => {\n  const { db } = t.context;\n  const user_1 = new User({\n    name: 'user_1',\n  });\n  await user_1.save();\n  t.true( !user_1.isNew, 'user\\'s `isNew` flag is false after a save' );\n});"]}