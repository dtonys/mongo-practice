{"version":3,"sources":["test_helper.js"],"names":["mongooseConnect","mongooseDisconnect","mongoose","require","Promise","global","connection","connect","useMongoClient","then","console","log","catch","error","disconnect"],"mappings":";;;;;QAIgBA,e,GAAAA,e;QAeAC,kB,GAAAA,kB;AAnBhB,MAAMC,WAAWC,QAAQ,UAAR,CAAjB;;AAEAD,SAASE,OAAT,GAAmBC,OAAOD,OAA1B;;AAEO,SAASJ,eAAT,GAA2B;AAChC,QAAMM,aAAaJ,SAASK,OAAT,CAAiB,gCAAjB,EAAmD;AACpEC,oBAAgB;AADoD,GAAnD,CAAnB;AAGAF,aACGG,IADH,CACQ,MAAM;AACVC,YAAQC,GAAR,CAAY,qBAAZ;AACD,GAHH,EAIGC,KAJH,CAIUC,KAAD,IAAW;AAChBH,YAAQC,GAAR,CAAY,qBAAZ;AACAD,YAAQC,GAAR,CAAYE,KAAZ;AACD,GAPH;AAQA,SAAOP,UAAP;AACD;;AAEM,SAASL,kBAAT,GAA8B;AACnCC,WAASY,UAAT;AACD","file":"test_helper.js","sourcesContent":["const mongoose = require('mongoose');\n\nmongoose.Promise = global.Promise;\n\nexport function mongooseConnect() {\n  const connection = mongoose.connect('mongodb://localhost/users_test', {\n    useMongoClient: true,\n  })\n  connection\n    .then(() => {\n      console.log('mongo startup ready');\n    })\n    .catch((error) => {\n      console.log('mongo startup error');\n      console.log(error);\n    });\n  return connection;\n}\n\nexport function mongooseDisconnect() {\n  mongoose.disconnect();\n}\n"]}