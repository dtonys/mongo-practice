{"version":3,"sources":["subdocument_test.js"],"names":["before","t","after","always","beforeEach","serial","joe","name","posts","title","save","findOne","queriedUser","is","push","queriedUserUpdated","postToRemove","remove","console","log","length"],"mappings":"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","file":"subdocument_test.js","sourcesContent":["import test from 'ava';\nimport mongoose from 'mongoose';\nimport {\n  mongooseConnect,\n  mongooseDisconnect,\n  mongooseDropTestCollections,\n} from '../test_helper';\nimport User from '../../src/user';\n\n\ntest.before('connect to database', async (t) => {\n  await mongooseConnect('users_test');\n});\n\ntest.after.always('disconnect from database', async () => {\n  await mongooseDisconnect();\n});\n\ntest.beforeEach('drop test tables', mongooseDropTestCollections);\n\ntest.serial('Creating subdocuments', async (t) => {\n  const joe = new User({\n    name: 'Joe',\n    posts: [{ title: 'post_title' }],\n  });\n  await joe.save();\n  const queriedUser = await User.findOne({ name: 'Joe' });\n  t.is( queriedUser.posts[0].title, 'post_title', 'queriedUser was created with a post subdocument' );\n});\n\ntest.serial('Adding subdocuments to existing record', async (t) => {\n  const joe = new User({\n    name: 'Joe',\n    posts: [],\n  });\n  await joe.save();\n  const queriedUser = await User.findOne({ name: 'Joe' });\n  queriedUser.posts.push({ title: 'New Post' });\n  await queriedUser.save();\n  const queriedUserUpdated = await User.findOne({ name: 'Joe' });\n  t.is(queriedUserUpdated.posts[0].title, 'New Post', 'queriedUser was updated with an added post');\n});\n\ntest.serial('Removing subdocuments from existing record', async (t) => {\n  const joe = new User({\n    name: 'Joe',\n    posts: [{ title: 'New Title' }],\n  });\n  await joe.save();\n  const queriedUser = await User.findOne({ name: 'Joe' });\n  const postToRemove = queriedUser.posts[0];\n  postToRemove.remove();\n  await queriedUser.save();\n  const queriedUserUpdated = await User.findOne({ name: 'Joe' });\n  console.log('queriedUserUpdated');\n  console.log(queriedUserUpdated);\n  t.is(queriedUserUpdated.posts.length, 0, 'queriedUser was updated with a removed post');\n});\n\n\n\n\n\n\n\n\n"]}