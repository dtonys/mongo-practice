{"version":3,"sources":["delete_test.js"],"names":["createUser","user_1","name","save","before","t","after","always","beforeEach","serial","newUser","remove","findOne","queriedUser","is","findOneAndRemove","findByIdAndRemove","_id"],"mappings":";;AAAA;;;;AACA;;;;AACA;;AAKA;;;;;;;;AAGA,SAASA,UAAT,GAAsB;AACpB,MAAMC,SAAS,mBAAS;AACtBC,UAAM;AADgB,GAAT,CAAf;AAGA,SAAOD,OAAOE,IAAP,EAAP;AACD;;AAED,cAAKC,MAAL,CAAY,qBAAZ;AAAA,uDAAmC,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC3B,kCAAgB,YAAhB,CAD2B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnC;;AAAA;AAAA;AAAA;AAAA;;AAIA,cAAKC,KAAL,CAAWC,MAAX,CAAkB,0BAAlB,4CAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACtC,sCADsC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA9C;;AAIA,cAAKC,UAAL,CAAgB,kBAAhB;;AAEA,cAAKC,MAAL,CAAY,yBAAZ;AAAA,wDAAuC,kBAAOJ,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACfL,YADe;;AAAA;AAC/BU,mBAD+B;AAAA;AAAA,mBAE/BA,QAAQC,MAAR,EAF+B;;AAAA;AAAA;AAAA,mBAGX,eAAKC,OAAL,CAAa,EAAEV,MAAM,SAAR,EAAb,CAHW;;AAAA;AAG/BW,uBAH+B;;AAIrCR,cAAES,EAAF,CAAMD,WAAN,EAAmB,IAAnB,EAAyB,uCAAzB;;AAJqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvC;;AAAA;AAAA;AAAA;AAAA;;AAOA,cAAKJ,MAAL,CAAY,uBAAZ;AAAA,wDAAqC,kBAAOJ,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACbL,YADa;;AAAA;AAC7BU,mBAD6B;AAAA;AAAA,mBAE7B,eAAKC,MAAL,CAAY,EAAET,MAAM,SAAR,EAAZ,CAF6B;;AAAA;AAAA;AAAA,mBAGT,eAAKU,OAAL,CAAa,EAAEV,MAAM,SAAR,EAAb,CAHS;;AAAA;AAG7BW,uBAH6B;;AAInCR,cAAES,EAAF,CAAMD,WAAN,EAAmB,IAAnB,EAAyB,uCAAzB;;AAJmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAAA;AAAA;AAAA;AAAA;;AAOA,cAAKJ,MAAL,CAAY,iCAAZ;AAAA,wDAA+C,kBAAOJ,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACvBL,YADuB;;AAAA;AACvCU,mBADuC;AAAA;AAAA,mBAEvC,eAAKK,gBAAL,CAAsB,EAAEb,MAAM,SAAR,EAAtB,CAFuC;;AAAA;AAAA;AAAA,mBAGnB,eAAKU,OAAL,CAAa,EAAEV,MAAM,SAAR,EAAb,CAHmB;;AAAA;AAGvCW,uBAHuC;;AAI7CR,cAAES,EAAF,CAAMD,WAAN,EAAmB,IAAnB,EAAyB,uCAAzB;;AAJ6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/C;;AAAA;AAAA;AAAA;AAAA;;AAOA,cAAKJ,MAAL,CAAY,kCAAZ;AAAA,wDAAgD,kBAAOJ,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACxBL,YADwB;;AAAA;AACxCU,mBADwC;AAAA;AAAA,mBAExC,eAAKM,iBAAL,CAAuBN,QAAQO,GAA/B,CAFwC;;AAAA;AAAA;AAAA,mBAGpB,eAAKL,OAAL,CAAa,EAAEV,MAAM,SAAR,EAAb,CAHoB;;AAAA;AAGxCW,uBAHwC;;AAI9CR,cAAES,EAAF,CAAMD,WAAN,EAAmB,IAAnB,EAAyB,uCAAzB;;AAJ8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhD;;AAAA;AAAA;AAAA;AAAA","file":"delete_test.js","sourcesContent":["import test from 'ava';\nimport mongoose from 'mongoose';\nimport {\n  mongooseConnect,\n  mongooseDisconnect,\n  mongooseDropTestCollections,\n} from '../test_helper';\nimport User from '../../src/user';\n\n\nfunction createUser() {\n  const user_1 = new User({\n    name: 'newUser',\n  });\n  return user_1.save();\n}\n\ntest.before('connect to database', async (t) => {\n  await mongooseConnect('users_test');\n});\n\ntest.after.always('disconnect from database', async () => {\n  await mongooseDisconnect();\n});\n\ntest.beforeEach('drop test tables', mongooseDropTestCollections);\n\ntest.serial('model instance `remove`', async (t) => {\n  const newUser = await createUser();\n  await newUser.remove();\n  const queriedUser = await User.findOne({ name: 'newUser' });\n  t.is( queriedUser, null, 'user should be null after deleting it' );\n});\n\ntest.serial('class method `remove`', async (t) => {\n  const newUser = await createUser();\n  await User.remove({ name: 'newUser' });\n  const queriedUser = await User.findOne({ name: 'newUser' })\n  t.is( queriedUser, null, 'user should be null after deleting it' );\n});\n\ntest.serial('class method `findOneAndRemove`', async (t) => {\n  const newUser = await createUser();\n  await User.findOneAndRemove({ name: 'newUser' });\n  const queriedUser = await User.findOne({ name: 'newUser' })\n  t.is( queriedUser, null, 'user should be null after deleting it' );\n});\n\ntest.serial('class method `findByIdAndRemove`', async (t) => {\n  const newUser = await createUser();\n  await User.findByIdAndRemove(newUser._id);\n  const queriedUser = await User.findOne({ name: 'newUser' })\n  t.is( queriedUser, null, 'user should be null after deleting it' );\n});\n"]}